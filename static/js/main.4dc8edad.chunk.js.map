{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundry.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","SearchValue","searchchange","placeholder","value","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onsearchchange","event","target","fetch","then","response","json","users","filteredRobot","filter","robot","toLowerCase","includes","length","CardList","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOASeA,EATF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAI,MAAMC,IAAG,+BAA0BH,EAA1B,cAClB,6BAAKF,IACL,4BAAIC,QCiBKK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAKlB,OACE,qBAAKJ,UAAU,WAAf,SACGI,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACE,cAAC,EAAD,CAEER,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCAFC,EAVG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,uBACEV,UAAU,YACVW,YAAY,eACZC,MAAOH,EACPI,SAAUH,KCODI,EAbA,SAACC,GACd,OACE,qBACEC,MAAO,CACLC,UAAW,SACXC,OAAQ,kBACRC,OAAQ,SAJZ,SAOGJ,EAAMK,YCUEC,E,kDAlBb,WAAYN,GAAQ,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHK,E,qDAOnB,SAAkBC,EAAOC,GACvBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE5B,WACE,OAAOG,KAAKJ,MAAMC,SAChB,uEAEAG,KAAKX,MAAMK,a,GAfUQ,aC+CZC,G,wDAxCb,aAAe,IAAD,8BACZ,gBAYFC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOpB,SAZ1C,EAAKU,MAAQ,CACXlB,OAAQ,GACRK,YAAa,IAJH,E,qDAOd,WAAqB,IAAD,OAClBwB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKV,SAAS,CAAEvB,OAAQiC,S,oBAM7C,WAAU,IAAD,OACDC,EAAgBZ,KAAKJ,MAAMlB,OAAOmC,QAAO,SAACC,GAC9C,OAAOA,EAAM3C,KACV4C,cACAC,SAAS,EAAKpB,MAAMb,YAAYgC,kBAErC,OAAiC,IAA7Bf,KAAKJ,MAAMlB,OAAOuC,OACb,wDAGL,gCACE,oBAAI3C,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAACc,EAAD,CAAUxC,OAAQkC,e,GAhCdV,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SAKjDX,M","file":"static/js/main.4dc8edad.chunk.js","sourcesContent":["const Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"cards\">\r\n      <img alt=\"img\" src={`https://robohash.org/${id}?200*100`} />\r\n      <h4>{name}</h4>\r\n      <p>{email}</p>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import Card from \"./Card\";\r\n\r\nconst Cardlist = ({ robots }) => {\r\n  // if (true) {\r\n  //   throw new Error(\"Oooh Shit!!!\");\r\n  // }\r\n\r\n  return (\r\n    <div className=\"cardsbox\">\r\n      {robots.map((user, i) => {\r\n        return (\r\n          <Card\r\n            key={i}\r\n            id={robots[i].id}\r\n            name={robots[i].name}\r\n            email={robots[i].email}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Cardlist;\r\n","import react from \"react\";\r\n\r\nconst SearchBox = ({ SearchValue, searchchange }) => {\r\n  return (\r\n    <input\r\n      className=\"searchbox\"\r\n      placeholder=\"SearchRobots\"\r\n      value={SearchValue}\r\n      onChange={searchchange}\r\n    />\r\n  );\r\n};\r\nexport default SearchBox;\r\n","import react from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"1px solid black\",\r\n        height: \"450px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Scroll;\r\n","import { Component } from \"react\";\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hasError: false,\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n  render() {\r\n    return this.state.hasError ? (\r\n      <h1>shit!!!!!!!! Something'wrong!!!!!!!!!</h1>\r\n    ) : (\r\n      this.props.children\r\n    );\r\n  }\r\n}\r\nexport default ErrorBoundry;\r\n","import react from \"react\";\r\nimport { Component } from \"react\";\r\nimport CardList from \"../Components/CardList\";\r\nimport { robots } from \"../Robots\";\r\nimport SearchBox from \"../Components/SearchBox\";\r\nimport Scroll from \"../Components/Scroll\";\r\nimport ErrorBoundry from \"../Components/ErrorBoundry\";\r\nimport \"../Containers/App.css\";\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      robots: [],\r\n      SearchValue: \"\",\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((response) => response.json())\r\n      .then((users) => this.setState({ robots: users }));\r\n  }\r\n\r\n  onsearchchange = (event) => {\r\n    this.setState({ SearchValue: event.target.value });\r\n  };\r\n  render() {\r\n    const filteredRobot = this.state.robots.filter((robot) => {\r\n      return robot.name\r\n        .toLowerCase()\r\n        .includes(this.state.SearchValue.toLowerCase());\r\n    });\r\n    if (this.state.robots.length === 0) {\r\n      return <h1>Loading Please Wait...</h1>;\r\n    } else {\r\n      return (\r\n        <div>\r\n          <h1 className=\"h1\">Robo Friend</h1>\r\n          <SearchBox searchchange={this.onsearchchange} />\r\n          <Scroll>\r\n            <ErrorBoundry>\r\n              <CardList robots={filteredRobot} />\r\n            </ErrorBoundry>\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Containers/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}